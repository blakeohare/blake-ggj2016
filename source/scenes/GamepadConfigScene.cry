PLAYER_ALLOCATIONS = ['M', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7'];

class GamepadConfigScene : AbstractScene {
	constructor() : base() {
		this.devices = [];
		this.titles = [];
		this.players = [];
		
		this.anim_counter = 0;
		
		device_count = $gamepad_count();
		for (i = 0; i < device_count; ++i) {
			device = $gamepad_get_device(i);
			this.devices.add(device);
			this.titles.add(device.name);
		}
		this.refresh_player_ids();
		
		this.current_index = 0;
	}
	
	function refresh_player_ids() {
		this.players = [];
		for (dev : this.devices) {
			this.players.add(dev.id);
		}
	}
	
	function update(events, mx, my) {
		old = this.current_index;
		enter_pressed = false;
		for (event : events) {
			switch (event.type) {
				case 'keydown':
					if (event.key == 'up') {
						this.current_index--;
					} else if (event.key == 'down') {
						this.current_index++;
					} else if (event.key == 'enter') {
						enter_pressed = true;
					}
					break;
			}
		}
		
		if (this.current_index < 0) this.current_index = 0;
		else if (this.current_index >= this.devices.length) this.current_index = this.devices.length - 1;
		
		if (old != this.current_index) {
			this.anim_counter = 0;
		}
		
		this.anim_counter++;
		
		if (enter_pressed) {
			i = this.current_index;
			player_id = this.players[i];
			if (player_id == null || !PLAYER_ALLOCATIONS.contains(player_id)) {
				player_id = null;
				for (pid : PLAYER_ALLOCATIONS) {
					if (!this.players.contains(pid)) {
						player_id = pid;
						break;
					}
				}
			}
			device = this.devices[i];
			
			$gamepad_clear_bindings(device);
			if (player_id != null) {
				$gamepad_set_id(device, player_id);
				this.switch_scene(new GamepadBindScene(this, device, player_id, this.titles[i]));
			}
		}
	}
	
	function render(rc) {
		y = 50;
		for (i = 0; i < this.devices.length; ++i) {
			x = 50;
			
			if (i == this.current_index) {
				cx = x - 30;
				cy = y + 20 - $floor($abs($sin(this.anim_counter * 2 * 3.14159 * 1.3 / FPS) * 20));
				$gfx_draw_rectangle(cx, cy, 15, 15, 255, 255, 255, 255);
			}
			
			title = this.titles[i];
			player = this.players[i];
			coord = TEXT.render('white-M', '#' + (i + 1) + ': ', x, y);
			x = coord[0];
			if (player == 'M') {
				coord = TEXT.render('red-M', 'Monster', x, y);
			} else if (player != null && player[0] == 'V' && player.length == 2) {
				coord = TEXT.render('blue-M', 'Villager ' + player[-1], x, y);
			} else {
				coord = TEXT.render('yellow-M', '(?)', x, y);
			}
			
			coord = TEXT.render('white-M', '#' + (i + 1) + ': ' + title, coord[0], y);
			y += 50;
			
			
		}
	}
}